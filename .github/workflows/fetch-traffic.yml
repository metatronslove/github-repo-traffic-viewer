name: GitHub Traffic Verisini Topla ve SayfalarÄ± DaÄŸÄ±t

on:
  schedule:
    - cron: '0 * * * *'  # Her saat baÅŸÄ± Ã§alÄ±ÅŸÄ±r
  workflow_dispatch:      # Manuel tetikleme
  push:
    branches: [main]     # Main branch'e push yapÄ±ldÄ±ÄŸÄ±nda

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      metadata: read
      pages: write
      id-token: write
      actions: write  # Artefakt silmek iÃ§in gerekli

    steps:
      # 1. Repoyu klonla
      - name: Repo'yu klonla
        uses: actions/checkout@v3

      # 2. Eski artefaktlarÄ± temizle
      - name: Eski github-pages artefaktlarÄ±nÄ± temizle
        if: always()
        run: |
          # GitHub CLI ile eski artefaktlarÄ± sil
          gh api repos/${{ github.repository }}/actions/artifacts \
            --jq '.artifacts[] | select(.name == "github-pages") | .id' \
            | xargs -I{} gh api repos/${{ github.repository }}/actions/artifacts/{} -X DELETE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 3. Trafik verilerini topla
      - name: Trafik verilerini al
        run: |
          mkdir -p docs/data
          curl -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/traffic/views > docs/data/views.json

          curl -H "Accept: application/vnd.github+json" \
               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }}/traffic/clones > docs/data/clones.json

          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               https://api.github.com/repos/${{ github.repository }} > docs/data/repos.json

      # 4. Siteyi oluÅŸtur (Ã¶rnek - kendi build komutlarÄ±nÄ±zÄ± ekleyin)
      - name: Siteyi build et
        run: |
          mkdir -p build
          echo "<html><body><h1>Site Ä°Ã§eriÄŸi</h1></body></html>" > build/index.html
          cp -r docs/data build/data  # Trafik verilerini siteye ekle

      # 5. ArtefaktÄ± benzersiz isimle yÃ¼kle
      - name: Site artefaktÄ±nÄ± yÃ¼kle
        uses: actions/upload-pages-artifact@v2
        with:
          name: github-pages-${{ github.run_id }}  # Benzersiz isim
          path: build/
          retention-days: 1

      # 6. GitHub Pages'e daÄŸÄ±t
      - name: GitHub Pages'e daÄŸÄ±t
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages-${{ github.run_id }}  # YÃ¼kleme adÄ±mÄ±yla aynÄ± isim
          target_branch: gh-pages

      # 7. DeÄŸiÅŸiklikleri commitle
      - name: Verileri commitle
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add docs/data/*.json
          git commit -m "ğŸ”„ Trafik verileri gÃ¼ncellendi - Run ${{ github.run_number }}" || echo "DeÄŸiÅŸiklik yok"
          git push